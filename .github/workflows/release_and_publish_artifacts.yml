name: Release and publish artifacts
on:
  push:
    branches-ignore:
        - main
    paths-ignore:
      - "notes/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run canister test suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
            submodules: 'recursive'
      - name: Cache install Nix packages
        uses: rikhuijzer/cache-install@v1.0.9
        with:
          key: nix-${{ hashFiles('default.nix') }}
      - name: Cache rust dependencies, build output and DFX build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            .dfx/
          key: rust-test-${{ hashFiles('**/Cargo.lock') }}
      - name: Import DFX identity
        run: |
          touch actions_identity.pem
          echo "${{ secrets.CANISTER_CONTROLLER_SECRET_KEY }}" > actions_identity.pem
          nix-shell --run "dfx identity import --disable-encryption actions actions_identity.pem"
          nix-shell --run "dfx identity use actions"
      - name: Start local replica
        run: nix-shell --run "dfx start --background"
      - name: Provision local canister IDs for the canisters
        run: |
          nix-shell --run "dfx canister create --no-wallet configuration"
          nix-shell --run "dfx canister create --no-wallet data_backup"
          nix-shell --run "dfx canister create --no-wallet individual_user_template"
          nix-shell --run "dfx canister create --no-wallet post_cache"
          nix-shell --run "dfx canister create --no-wallet user_index"
      - name: Stop local replica
        run: nix-shell --run "dfx stop"
      - name: Build individual_user_template canister
        run: |
          nix-shell --run "dfx build individual_user_template --network=ic"
          gzip -f -1 ./target/wasm32-unknown-unknown/release/individual_user_template.wasm
      - name: Build user_index canister
        run: |
          nix-shell --run "dfx build user_index --network=ic"
      - name: Build configuration canister
        run: |
          nix-shell --run "dfx build configuration --network=ic"
      - name: Build data_backup canister
        run: |
          nix-shell --run "dfx build data_backup --network=ic"
      - name: Build post_cache canister
        run: |
          nix-shell --run "dfx build post_cache --network=ic"
      - name: 'Create Release'
        uses: "marvinpinto/action-automatic-releases@latest"
        with: 
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: "latest"
            prerelease: true
            title: "Development Build"
            files: |
                ./target/wasm32-unknown-unknown/release/*.wasm
      - name: 'Submit upgrade proposal for user_index canister'
        run: |
          CANISTER_NAME=user_index
          mkdir -p "proposals/${CANISTER_NAME}
          touch "proposals/${CANISTER_NAME}/upgrade.json"
          nix-shell --run "quill sns \
            --canister-ids-file ./sns/sns_canister_ids.json \
            --pem-file actions_identity.pem \
            make-upgrade-canister-proposal \
            --title 'Upgrade ${CANISTER_NAME} Canisters' \
            --summary 'Basic Summary' \
            --url 'https://hotornot.wtf' \
            --target-canister-id '$(dfx canister id ${CANISTER_NAME} --network ic)' \
            --wasm-path './.dfx/ic/canisters/${CANISTER_NAME}/${CANISTER_NAME}.wasm.gz' \
            --canister-upgrade-arg '(record {})' \
            ${{secrets.NEURON_ID}}" > "proposals/${CANISTER_NAME}/upgrade.json"
            


           
          






